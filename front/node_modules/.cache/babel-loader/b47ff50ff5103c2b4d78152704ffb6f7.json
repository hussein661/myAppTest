{"ast":null,"code":"import _classCallCheck from \"/home/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/square/square/projects/blissfull-final-project/front/src/ControllerCMS/Cakeitem.js\";\nimport React from 'react';\n\nvar Cakeitem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Cakeitem, _React$Component);\n\n  function Cakeitem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Cakeitem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Cakeitem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      editmode: false\n    };\n\n    _this.toggleEditMode = function () {\n      var editMode = !_this.state.editMode;\n\n      _this.setState({\n        editMode: editMode\n      });\n    };\n\n    _this.saveitem = function (event) {\n      var _this$props = _this.props,\n          id = _this$props.id,\n          updateCake = _this$props.updateCake;\n      event.preventDefault();\n      var form = event.target;\n      var name = form.name.value;\n      var catname = form.catname.value;\n      var description = form.description.value;\n      /* const image = form.image.value; */\n\n      var price = form.price.value;\n      updateCake(id, {\n        name: name,\n        catname: catname,\n        description: description,\n        price: price\n      });\n\n      _this.toggleEditMode();\n    };\n\n    return _this;\n  }\n\n  _createClass(Cakeitem, [{\n    key: \"renderViewMode\",\n    value: function renderViewMode() {\n      var _this$props2 = this.props,\n          id = _this$props2.id,\n          name = _this$props2.name,\n          catname = _this$props2.catname,\n          description = _this$props2.description,\n          image = _this$props2.image,\n          price = _this$props2.price,\n          deleteCake = _this$props2.deleteCake;\n      return React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return deleteCake(id);\n        },\n        class: \"close-thik\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, name), React.createElement(\"img\", {\n        className: \"card-img-top\",\n        src: image,\n        alt: \"Card cap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, description)), React.createElement(\"ul\", {\n        className: \"list-group list-group-flush\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, catname), React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, price), React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"button\",\n        className: \"form-btn\",\n        value: \"edit\",\n        onClick: this.toggleEditMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"button\",\n        className: \"form-btn\",\n        value: \"remove\",\n        onClick: function onClick() {\n          return deleteCake(id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    key: \"renderEditMode\",\n    value: function renderEditMode() {\n      var _this$props3 = this.props,\n          name = _this$props3.name,\n          catname = _this$props3.catname,\n          description = _this$props3.description,\n          price = _this$props3.price;\n      return React.createElement(\"div\", {\n        className: \"editcard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.saveitem,\n        className: \"editform\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Editing\"), React.createElement(\"label\", {\n        for: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"cake name\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"name\",\n        defaultValue: name,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"catname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"cake category\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"selectcatname\",\n        name: \"catname\",\n        defaultValue: catname,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"select category\"), React.createElement(\"option\", {\n        value: \"offer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"offer\"), React.createElement(\"option\", {\n        value: \"cake\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"cake\"), React.createElement(\"option\", {\n        value: \"cupcake\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"cupcake\"), React.createElement(\"option\", {\n        value: \"cookies\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"cookies\")), React.createElement(\"label\", {\n        for: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Item description\"), React.createElement(\"textarea\", {\n        name: \"description\",\n        className: \"form-control\",\n        defaultValue: description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"cake image\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"file\",\n        name: \"image\",\n        accept: \"image/*\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"price\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"price\",\n        defaultValue: price,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"form-btn\",\n        type: \"submit\",\n        value: \"Save\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"form-btn\",\n        type: \"reset\",\n        value: \"cancel\",\n        onClick: this.toggleEditMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var editMode = this.state.editMode;\n\n      if (editMode) {\n        return this.renderEditMode();\n      } else {\n        return this.renderViewMode();\n      }\n    }\n  }]);\n\n  return Cakeitem;\n}(React.Component);\n\nexport { Cakeitem as default };","map":{"version":3,"sources":["/home/square/square/projects/blissfull-final-project/front/src/ControllerCMS/Cakeitem.js"],"names":["React","Cakeitem","state","editmode","toggleEditMode","editMode","setState","saveitem","event","props","id","updateCake","preventDefault","form","target","name","value","catname","description","price","image","deleteCake","renderEditMode","renderViewMode","Component"],"mappings":"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","sourcesContent":["import React from 'react'\n\nexport default class Cakeitem extends React.Component {\n\n  state = {\n    editmode: false\n  }\n\n  toggleEditMode = () => {\n    const editMode = !this.state.editMode;\n    this.setState({ editMode });\n  };\n\n  renderViewMode() {\n    const { id, name, catname, description, image, price, deleteCake } = this.props\n\n    return (\n      <div className=\"card\">\n        <button onClick={() => deleteCake(id)} class=\"close-thik\"></button>\n        <h3>{name}</h3>\n        <img className=\"card-img-top\" src={image} alt=\"Card cap\" />\n        <div className=\"card-body\">\n          <p>{description}</p>\n        </div>\n        <ul className=\"list-group list-group-flush\">\n          <li className=\"list-group-item\">{catname}</li>\n          <li className=\"list-group-item\">{price}</li>\n          <li className=\"list-group-item\">\n            <input\n              type=\"button\"\n              className=\"form-btn\"\n              value=\"edit\"\n              onClick={this.toggleEditMode} />\n            <input\n              type=\"button\"\n              className=\"form-btn\"\n              value=\"remove\"\n              onClick={() => deleteCake(id)} />\n              \n          </li>\n        </ul>\n      </div>\n\n    )\n  }\n\n  renderEditMode() {\n    const { name, catname, description/*, image*/, price } = this.props\n    return (\n      <div className=\"editcard\">\n        <form onSubmit={this.saveitem} className=\"editform\">\n          <h1>Editing</h1>\n          <label for=\"text\">cake name</label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"name\"\n            defaultValue={name}\n            required />\n\n          <label for=\"catname\">cake category</label>\n          <select\n            className=\"form-control\"\n            id=\"selectcatname\"\n            name=\"catname\"\n            defaultValue={catname}\n            required>\n            <option value=\"\">select category</option>\n            <option value=\"offer\">offer</option>\n            <option value=\"cake\">cake</option>\n            <option value=\"cupcake\">cupcake</option>\n            <option value=\"cookies\">cookies</option>\n          </select>\n\n          <label for=\"description\">Item description</label>\n          <textarea\n            name=\"description\"\n            className=\"form-control\"\n            defaultValue={description}\n          />\n\n          <label for=\"image\">cake image</label>\n          <input\n            className=\"form-control\"\n            type=\"file\"\n            name=\"image\"\n            accept=\"image/*\" />      \n\n          <label for=\"price\">price</label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"price\"\n            defaultValue={price}\n            required />\n          <input className=\"form-btn\" type=\"submit\" value=\"Save\" />\n          <input className=\"form-btn\" type=\"reset\" value=\"cancel\" onClick={this.toggleEditMode} />\n        </form>\n      </div>\n    )\n  }\n\n  saveitem = event => {\n    const { id, updateCake } = this.props;\n    event.preventDefault();\n    const form = event.target;\n    const name = form.name.value;\n    const catname = form.catname.value;\n    const description = form.description.value;\n    /* const image = form.image.value; */\n    const price = form.price.value;\n    updateCake(id, { name, catname, description, price });\n    this.toggleEditMode();\n\n  }\n\n  render() {\n    const { editMode } = this.state;\n    if (editMode) {\n      return this.renderEditMode();\n    } else {\n      return this.renderViewMode();\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}