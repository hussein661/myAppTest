{"ast":null,"code":"import _toConsumableArray from \"/home/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/square/square/projects/blissfull-final-project/front/src/ControllerCMS/BlogController.js\";\nimport React from 'react';\nimport Blogpost from './Blogpost';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nvar BlogController =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BlogController, _React$Component);\n\n  function BlogController() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BlogController);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BlogController)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      allposts: [],\n      title: \"\",\n      author: \"\",\n      content: \"\",\n      image: \"\",\n      date: \"\"\n    };\n    _this.getAllPosts =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, answer, allposts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"http://localhost:5000/posts/allposts\");\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              answer = _context.sent;\n\n              if (answer.success) {\n                allposts = answer.result;\n\n                _this.setState({\n                  allposts: allposts\n                });\n\n                toast(\"posts loaded\");\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.addPost =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(props) {\n        var title, author, content, image, response, answer, id, post, allposts;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                title = props.title, author = props.author, content = props.content, image = props.image;\n                _context2.next = 3;\n                return fetch(\"http://localhost:5000/posts/addpost?title=\".concat(title, \"&author=\").concat(author, \"&content=\").concat(content, \"&image=\").concat(image));\n\n              case 3:\n                response = _context2.sent;\n                _context2.next = 6;\n                return response.json();\n\n              case 6:\n                answer = _context2.sent;\n\n                if (answer.success) {\n                  id = answer.result;\n                  post = {\n                    title: title,\n                    author: author,\n                    content: content,\n                    image: image,\n                    id: id\n                  };\n                  allposts = _toConsumableArray(_this.state.allposts).concat([post]);\n                  toast(\"\\\"\".concat(title, \"\\\" by \\\"\").concat(author, \"\\\" created\"));\n\n                  _this.setState({\n                    allposts: allposts\n                  });\n                }\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.updatePost =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(id, props) {\n        var response, answer, allposts;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return fetch(\"http://localhost:5000/posts/updatepost/\".concat(id, \"?title=\").concat(props.title, \"&author=\").concat(props.author, \"&content=\").concat(props.content, \"&image=\").concat(props.image));\n\n              case 2:\n                response = _context3.sent;\n                _context3.next = 5;\n                return response.json();\n\n              case 5:\n                answer = _context3.sent;\n\n                if (answer) {\n                  allposts = _this.state.allposts.map(function (post) {\n                    if (post.id === id) {\n                      var updatedPost = {\n                        id: post.id,\n                        title: props.title,\n                        author: props.author,\n                        content: props.content,\n                        image: post.image\n                      };\n                      toast(\"post \\\"\".concat(updatedPost.title, \"\\\" updated\"));\n                      return updatedPost;\n                    } else {\n                      return post;\n                    }\n                  });\n\n                  _this.setState({\n                    allposts: allposts\n                  });\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.deletePost =\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(id) {\n        var response, answer, allposts;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return fetch(\"http://localhost:5000/posts/deletepost/\".concat(id));\n\n              case 2:\n                response = _context4.sent;\n                _context4.next = 5;\n                return response.json();\n\n              case 5:\n                answer = _context4.sent;\n\n                if (answer) {\n                  allposts = _this.state.allposts.filter(function (post) {\n                    return post.id !== id;\n                  });\n                  toast(\"post deleted\");\n\n                  _this.setState({\n                    allposts: allposts\n                  });\n                }\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this.deleteAllPosts =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      var response, answer, allposts;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!window.confirm(\"are you sure !?\")) {\n                _context5.next = 8;\n                break;\n              }\n\n              _context5.next = 3;\n              return fetch(\"http://localhost:5000/posts/deleteall\");\n\n            case 3:\n              response = _context5.sent;\n              _context5.next = 6;\n              return response.json();\n\n            case 6:\n              answer = _context5.sent;\n\n              if (answer.success) {\n                allposts = answer.result;\n\n                _this.setState({\n                  allposts: allposts\n                });\n              }\n\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n\n    _this.handleimage =\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(event) {\n        var files, data, res, file;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                files = event.target.files;\n                data = new FormData();\n                data.append('file', files[0]);\n                data.append('upload_preset', 'square');\n                _context6.next = 6;\n                return fetch('https://api.cloudinary.com/v1_1/dhmbvtwig/image/upload', {\n                  method: 'POST',\n                  body: data\n                });\n\n              case 6:\n                res = _context6.sent;\n                _context6.next = 9;\n                return res.json();\n\n              case 9:\n                file = _context6.sent;\n\n                _this.setState({\n                  image: file.secure_url\n                });\n\n              case 11:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    _this.onSubmit = function (event) {\n      event.preventDefault();\n      var _this$state = _this.state,\n          title = _this$state.title,\n          author = _this$state.author,\n          content = _this$state.content,\n          image = _this$state.image,\n          date = _this$state.date;\n\n      _this.addPost({\n        title: title,\n        author: author,\n        content: content,\n        image: image,\n        date: date\n      });\n\n      _this.setState({\n        title: \"\",\n        author: \"\",\n        content: \"\",\n        image: \"\",\n        date: \"\"\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BlogController, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getAllPosts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (localStorage.getItem(\"token\") !== \"null\") {\n        return React.createElement(\"div\", {\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"myPar controlall\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, \"This is the blog controller\")), React.createElement(\"div\", {\n          className: \"linkdivs\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"controllerNavigation\",\n          href: \"/control\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, \"Back to Control Panel\")), React.createElement(\"div\", {\n          className: \"controlup controlall\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: this.onSubmit,\n          className: \"addform\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, \"Title\"), React.createElement(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          placeholder: \"title\",\n          onChange: function onChange(event) {\n            return _this2.setState({\n              title: event.target.value\n            });\n          },\n          value: this.state.title,\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          for: \"author\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, \"author\"), React.createElement(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          placeholder: \"author\",\n          onChange: function onChange(event) {\n            return _this2.setState({\n              author: event.target.value\n            });\n          },\n          value: this.state.author,\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          for: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, \"Blog content text\"), React.createElement(\"textarea\", {\n          className: \"form-control\",\n          placeholder: \"content\",\n          onChange: function onChange(event) {\n            return _this2.setState({\n              content: event.target.value\n            });\n          },\n          value: this.state.content,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          for: \"image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, \"Blog image\"), React.createElement(\"input\", {\n          className: \"form-control\",\n          type: \"file\",\n          name: \"image\",\n          accept: \"image/*\",\n          onChange: this.handleimage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          className: \"form-btn\",\n          type: \"submit\",\n          value: \"add\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          className: \"form-btn\",\n          type: \"reset\",\n          value: \"cancel\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"button\",\n          className: \"form-btn\",\n          value: \"delete all\",\n          onClick: this.deleteAllPosts,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }))), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"grid-blog-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, this.state.allposts.map(function (post) {\n          return React.createElement(Blogpost, {\n            key: post.id,\n            id: post.id,\n            title: post.title,\n            author: post.author,\n            content: post.content,\n            image: post.image,\n            date: post.date,\n            deletePost: _this2.deletePost,\n            updatePost: _this2.updatePost,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178\n            },\n            __self: this\n          });\n        })), React.createElement(ToastContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"h1\", {\n          className: \"notauth\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, \"Un authorized\");\n      }\n    }\n  }]);\n\n  return BlogController;\n}(React.Component);\n\nexport default BlogController;","map":{"version":3,"sources":["/home/square/square/projects/blissfull-final-project/front/src/ControllerCMS/BlogController.js"],"names":["React","Blogpost","ToastContainer","toast","BlogController","state","allposts","title","author","content","image","date","getAllPosts","fetch","response","json","answer","success","result","setState","addPost","props","id","post","updatePost","map","updatedPost","deletePost","filter","deleteAllPosts","window","confirm","handleimage","event","files","target","data","FormData","append","method","body","res","file","secure_url","onSubmit","preventDefault","localStorage","getItem","value","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Blogpost from './Blogpost';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n\nclass BlogController extends React.Component {\n\n  state = {\n    allposts: [],\n    title: \"\",\n    author: \"\",\n    content: \"\",\n    image: \"\",\n    date: \"\"\n  }\n\n  getAllPosts = async () => {\n\n    const response = await fetch(\n      `http://localhost:5000/posts/allposts`\n    );\n    const answer = await response.json();\n    if (answer.success) {\n      const allposts = answer.result;\n      this.setState({ allposts });\n      toast(`posts loaded`)\n    }\n  };\n\n  addPost = async (props) => {\n    const { title, author, content, image } = props;\n    const response = await fetch(`http://localhost:5000/posts/addpost?title=${title}&author=${author}&content=${content}&image=${image}`);\n    const answer = await response.json();\n    if (answer.success) {\n      const id = answer.result;\n      const post = { title, author, content, image, id }\n      const allposts = [...this.state.allposts, post]\n      toast(`\"${title}\" by \"${author}\" created`)\n\n      this.setState({ allposts })\n\n    }\n  }\n\n  updatePost = async (id, props) => {\n    const response = await fetch(`http://localhost:5000/posts/updatepost/${id}?title=${props.title}&author=${props.author}&content=${props.content}&image=${props.image}`)\n    const answer = await response.json();\n    if (answer) {\n      const allposts = this.state.allposts.map(post => {\n        if (post.id === id) {\n\n          const updatedPost = {\n            id: post.id,\n            title: props.title,\n            author: props.author,\n            content: props.content,\n            image: post.image,\n          }\n          toast(`post \"${updatedPost.title}\" updated`)\n          return updatedPost\n        }\n        else {\n          return post\n        }\n      });\n      this.setState({ allposts });\n    }\n  }\n\n  deletePost = async id => {\n    const response = await fetch(`http://localhost:5000/posts/deletepost/${id}`);\n    const answer = await response.json();\n    if (answer) {\n      const allposts = this.state.allposts.filter(\n        post => post.id !== id\n      );\n      toast(`post deleted`)\n      this.setState({ allposts });\n    }\n  }\n\n  deleteAllPosts = async () => {\n    if (window.confirm(\"are you sure !?\")) {\n      const response = await fetch(`http://localhost:5000/posts/deleteall`);\n      const answer = await response.json();\n      if (answer.success) {\n        const allposts = answer.result;\n        this.setState({ allposts })\n      }\n    }\n  }\n\n\n  componentDidMount() {\n    this.getAllPosts();\n  }\n\n  handleimage = async (event) => {\n    const files = event.target.files;\n    const data = new FormData();\n    data.append('file', files[0]);\n    data.append('upload_preset', 'square')\n\n    const res = await fetch('https://api.cloudinary.com/v1_1/dhmbvtwig/image/upload', {\n      method: 'POST',\n      body: data\n    })\n    const file = await res.json()\n    this.setState({\n      image: file.secure_url\n    })\n\n  }\n\n\n  onSubmit = event => {\n    event.preventDefault();\n    const { title, author, content, image, date } = this.state;\n    this.addPost({ title, author, content, image, date });\n    this.setState({ title: \"\", author: \"\", content: \"\", image: \"\", date: \"\" })\n  }\n\n\n  render() {\n    if (localStorage.getItem(\"token\") !== \"null\") {\n      return (\n        <div className=\"\">\n          <div className=\"myPar controlall\">\n            <h1>This is the blog controller</h1>\n          </div>\n          <div className=\"linkdivs\">\n            <a className=\"controllerNavigation\" href=\"/control\">Back to Control Panel</a>\n          </div>\n          {/* add post form below */}\n          <div className=\"controlup controlall\">\n            <form onSubmit={this.onSubmit} className=\"addform\">\n              <label for=\"title\">Title</label>\n              <input className=\"form-control\"\n                type=\"text\"\n                placeholder=\"title\"\n                onChange={event => this.setState({ title: event.target.value })}\n                value={this.state.title}\n                required />\n  \n              <label for=\"author\">author</label>\n              <input className=\"form-control\"\n                type=\"text\"\n                placeholder=\"author\"\n                onChange={event => this.setState({ author: event.target.value })}\n                value={this.state.author}\n                required />\n  \n              <label for=\"content\">Blog content text</label>\n              <textarea className=\"form-control\"\n                placeholder=\"content\"\n                onChange={event => this.setState({ content: event.target.value })}\n                value={this.state.content}\n              />\n  \n              <label for=\"image\">Blog image</label>\n              <input className=\"form-control\"\n                type=\"file\"\n                name=\"image\"\n                accept=\"image/*\"\n                onChange={this.handleimage} />\n  \n              <input className=\"form-btn\" type=\"submit\" value=\"add\" />\n              <input className=\"form-btn\" type=\"reset\" value=\"cancel\" />\n              <input type=\"button\" className=\"form-btn\" value=\"delete all\" onClick={this.deleteAllPosts} />\n  \n            </form>\n          </div>\n          <hr />\n          {/* add post form above */}\n          <div className=\"grid-blog-item\">\n          {this.state.allposts.map(post =>\n          <Blogpost\n          key={post.id}\n          id={post.id}\n          title={post.title}\n          author={post.author}\n          content={post.content}\n          image={post.image}\n          date={post.date}\n          deletePost={this.deletePost}\n          updatePost={this.updatePost} />\n          )}\n          </div>\n          <ToastContainer />\n        </div>\n  \n      )\n    } else {\n      return(<h1 className=\"notauth\">Un authorized</h1>)\n    }\n   \n  }\n}\n\nexport default BlogController;"]},"metadata":{},"sourceType":"module"}