{"ast":null,"code":"import _toConsumableArray from \"/home/square/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/square/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/square/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/square/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/square/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/square/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/square/square/square/projects/blissfull-final-project/front/src/components/Pagination.js\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nvar LEFT_PAGE = \"LEFT\";\nvar RIGHT_PAGE = \"RIGHT\";\n\nvar range = function range(from, to) {\n  var step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var i = from;\n  var range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n};\n\nvar Pagination =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Pagination, _Component);\n\n  function Pagination(props) {\n    var _this;\n\n    _classCallCheck(this, Pagination);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pagination).call(this, props));\n\n    _this.gotoPage = function (page) {\n      var _this$props$onPageCha = _this.props.onPageChanged,\n          onPageChanged = _this$props$onPageCha === void 0 ? function (f) {\n        return f;\n      } : _this$props$onPageCha;\n      var currentPage = Math.max(0, Math.min(page, _this.totalPages));\n      var paginationData = {\n        currentPage: currentPage,\n        totalPages: _this.totalPages,\n        pageLimit: _this.pageLimit,\n        totalRecords: _this.totalRecords\n      };\n\n      _this.setState({\n        currentPage: currentPage\n      }, function () {\n        return onPageChanged(paginationData);\n      });\n    };\n\n    _this.handleClick = function (page, evt) {\n      evt.preventDefault();\n\n      _this.gotoPage(page);\n    };\n\n    _this.handleMoveLeft = function (evt) {\n      evt.preventDefault();\n\n      _this.gotoPage(_this.state.currentPage - _this.pageNeighbours * 2 - 1);\n    };\n\n    _this.handleMoveRight = function (evt) {\n      evt.preventDefault();\n\n      _this.gotoPage(_this.state.currentPage + _this.pageNeighbours * 2 + 1);\n    };\n\n    _this.fetchPageNumbers = function () {\n      var totalPages = _this.totalPages;\n      var currentPage = _this.state.currentPage;\n      var pageNeighbours = _this.pageNeighbours;\n      var totalNumbers = _this.pageNeighbours * 2 + 3;\n      var totalBlocks = totalNumbers + 2;\n\n      if (totalPages > totalBlocks) {\n        var pages = [];\n        var leftBound = currentPage - pageNeighbours;\n        var rightBound = currentPage + pageNeighbours;\n        var beforeLastPage = totalPages - 1;\n        var startPage = leftBound > 2 ? leftBound : 2;\n        var endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\n        pages = range(startPage, endPage);\n        var pagesCount = pages.length;\n        var singleSpillOffset = totalNumbers - pagesCount - 1;\n        var leftSpill = startPage > 2;\n        var rightSpill = endPage < beforeLastPage;\n        var leftSpillPage = LEFT_PAGE;\n        var rightSpillPage = RIGHT_PAGE;\n\n        if (leftSpill && !rightSpill) {\n          var extraPages = range(startPage - singleSpillOffset, startPage - 1);\n          pages = [leftSpillPage].concat(_toConsumableArray(extraPages), _toConsumableArray(pages));\n        } else if (!leftSpill && rightSpill) {\n          var _extraPages = range(endPage + 1, endPage + singleSpillOffset);\n\n          pages = _toConsumableArray(pages).concat(_toConsumableArray(_extraPages), [rightSpillPage]);\n        } else if (leftSpill && rightSpill) {\n          pages = [leftSpillPage].concat(_toConsumableArray(pages), [rightSpillPage]);\n        }\n\n        return [1].concat(_toConsumableArray(pages), [totalPages]);\n      }\n\n      return range(1, totalPages);\n    };\n\n    var _props$totalRecords = props.totalRecords,\n        totalRecords = _props$totalRecords === void 0 ? null : _props$totalRecords,\n        _props$pageLimit = props.pageLimit,\n        pageLimit = _props$pageLimit === void 0 ? 30 : _props$pageLimit,\n        _props$pageNeighbours = props.pageNeighbours,\n        _pageNeighbours = _props$pageNeighbours === void 0 ? 0 : _props$pageNeighbours;\n\n    _this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30;\n    _this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\n    _this.pageNeighbours = typeof _pageNeighbours === \"number\" ? Math.max(0, Math.min(_pageNeighbours, 2)) : 0;\n    _this.totalPages = Math.ceil(_this.totalRecords / _this.pageLimit);\n    _this.state = {\n      currentPage: 1\n    };\n    return _this;\n  }\n\n  _createClass(Pagination, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.gotoPage(1);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.totalRecords) return null;\n      if (this.totalPages === 1) return null;\n      var currentPage = this.state.currentPage;\n      var pages = this.fetchPageNumbers();\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        \"aria-label\": \"Posts Pagination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"pagination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, pages.map(function (page, index) {\n        if (page === LEFT_PAGE) return React.createElement(\"li\", {\n          key: index,\n          className: \"page-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"page-link\",\n          href: \"#\",\n          \"aria-label\": \"Previous\",\n          onClick: _this2.handleMoveLeft,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          \"aria-hidden\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, \"\\xAB\"), React.createElement(\"span\", {\n          className: \"sr-only\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, \"Previous\")));\n        if (page === RIGHT_PAGE) return React.createElement(\"li\", {\n          key: index,\n          className: \"page-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"page-link\",\n          href: \"#\",\n          \"aria-label\": \"Next\",\n          onClick: _this2.handleMoveRight,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          \"aria-hidden\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, \"\\xBB\"), React.createElement(\"span\", {\n          className: \"sr-only\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, \"Next\")));\n        return React.createElement(\"li\", {\n          key: index,\n          className: \"page-item\".concat(currentPage === page ? \" active\" : \"\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"page-link\",\n          href: \"#\",\n          onClick: function onClick(e) {\n            return _this2.handleClick(page, e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, page));\n      }))));\n    }\n  }]);\n\n  return Pagination;\n}(Component);\n\nPagination.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  pageLimit: PropTypes.number,\n  pageNeighbours: PropTypes.number,\n  onPageChanged: PropTypes.func\n};\nexport default Pagination;","map":{"version":3,"sources":["/home/square/square/square/projects/blissfull-final-project/front/src/components/Pagination.js"],"names":["React","Component","Fragment","PropTypes","LEFT_PAGE","RIGHT_PAGE","range","from","to","step","i","push","Pagination","props","gotoPage","page","onPageChanged","f","currentPage","Math","max","min","totalPages","paginationData","pageLimit","totalRecords","setState","handleClick","evt","preventDefault","handleMoveLeft","state","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","totalBlocks","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","pagesCount","length","singleSpillOffset","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","ceil","map","index","e","propTypes","number","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst LEFT_PAGE = \"LEFT\";\nconst RIGHT_PAGE = \"RIGHT\";\n\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n};\n\nclass Pagination extends Component {\n  constructor(props) {\n    super(props);\n    const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\n\n    this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30;\n    this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\n\n    this.pageNeighbours =\n      typeof pageNeighbours === \"number\"\n        ? Math.max(0, Math.min(pageNeighbours, 2))\n        : 0;\n\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n\n    this.state = { currentPage: 1 };\n  }\n\n  componentDidMount() {\n    this.gotoPage(1);\n  }\n\n  gotoPage = page => {\n    const { onPageChanged = f => f } = this.props;\n\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\n\n    const paginationData = {\n      currentPage,\n      totalPages: this.totalPages,\n      pageLimit: this.pageLimit,\n      totalRecords: this.totalRecords\n    };\n\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\n  };\n\n  handleClick = (page, evt) => {\n    evt.preventDefault();\n    this.gotoPage(page);\n  };\n\n  handleMoveLeft = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage - this.pageNeighbours * 2 - 1);\n  };\n\n  handleMoveRight = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage + this.pageNeighbours * 2 + 1);\n  };\n\n  fetchPageNumbers = () => {\n    const totalPages = this.totalPages;\n    const currentPage = this.state.currentPage;\n    const pageNeighbours = this.pageNeighbours;\n\n    const totalNumbers = this.pageNeighbours * 2 + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n      let pages = [];\n\n      const leftBound = currentPage - pageNeighbours;\n      const rightBound = currentPage + pageNeighbours;\n      const beforeLastPage = totalPages - 1;\n\n      const startPage = leftBound > 2 ? leftBound : 2;\n      const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\n\n      pages = range(startPage, endPage);\n\n      const pagesCount = pages.length;\n      const singleSpillOffset = totalNumbers - pagesCount - 1;\n\n      const leftSpill = startPage > 2;\n      const rightSpill = endPage < beforeLastPage;\n\n      const leftSpillPage = LEFT_PAGE;\n      const rightSpillPage = RIGHT_PAGE;\n\n      if (leftSpill && !rightSpill) {\n        const extraPages = range(startPage - singleSpillOffset, startPage - 1);\n        pages = [leftSpillPage, ...extraPages, ...pages];\n      } else if (!leftSpill && rightSpill) {\n        const extraPages = range(endPage + 1, endPage + singleSpillOffset);\n        pages = [...pages, ...extraPages, rightSpillPage];\n      } else if (leftSpill && rightSpill) {\n        pages = [leftSpillPage, ...pages, rightSpillPage];\n      }\n\n      return [1, ...pages, totalPages];\n    }\n\n    return range(1, totalPages);\n  };\n\n  render() {\n    if (!this.totalRecords) return null;\n\n    if (this.totalPages === 1) return null;\n\n    const { currentPage } = this.state;\n    const pages = this.fetchPageNumbers();\n\n    return (\n      <Fragment>\n        <nav aria-label=\"Posts Pagination\">\n          <ul className=\"pagination\">\n            {pages.map((page, index) => {\n              if (page === LEFT_PAGE)\n                return (\n                  <li key={index} className=\"page-item\">\n                    <a\n                      className=\"page-link\"\n                      href=\"#\"\n                      aria-label=\"Previous\"\n                      onClick={this.handleMoveLeft}\n                    >\n                      <span aria-hidden=\"true\">&laquo;</span>\n                      <span className=\"sr-only\">Previous</span>\n                    </a>\n                  </li>\n                );\n\n              if (page === RIGHT_PAGE)\n                return (\n                  <li key={index} className=\"page-item\">\n                    <a\n                      className=\"page-link\"\n                      href=\"#\"\n                      aria-label=\"Next\"\n                      onClick={this.handleMoveRight}\n                    >\n                      <span aria-hidden=\"true\">&raquo;</span>\n                      <span className=\"sr-only\">Next</span>\n                    </a>\n                  </li>\n                );\n\n              return (\n                <li\n                  key={index}\n                  className={`page-item${\n                    currentPage === page ? \" active\" : \"\"\n                  }`}\n                >\n                  <a\n                    className=\"page-link\"\n                    href=\"#\"\n                    onClick={e => this.handleClick(page, e)}\n                  >\n                    {page}\n                  </a>\n                </li>\n              );\n            })}\n          </ul>\n        </nav>\n      </Fragment>\n    );\n  }\n}\n\nPagination.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  pageLimit: PropTypes.number,\n  pageNeighbours: PropTypes.number,\n  onPageChanged: PropTypes.func\n};\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}