{"ast":null,"code":"import _toConsumableArray from \"/home/square/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/square/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/square/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/square/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/square/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/square/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/square/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/square/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/square/square/square/projects/blissfull-final-project/front/src/ControllerCMS/MenuController.js\";\nimport React from 'react';\nimport Cakeitem from './Cakeitem';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nvar MenuController =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MenuController, _React$Component);\n\n  function MenuController() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MenuController);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MenuController)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      allcakes: [],\n      name: \"\",\n      catname: \"\",\n      description: \"\",\n      image: \"\",\n      price: \"\"\n    };\n    _this.getAllCakes =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, answer, allcakes;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"http://localhost:5000/cakes/allcakes\");\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              answer = _context.sent;\n\n              if (answer.success) {\n                allcakes = answer.result;\n\n                _this.setState({\n                  allcakes: allcakes\n                });\n\n                toast(\"cakes loaded\");\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.addCake =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(props) {\n        var name, catname, description, image, price, response, answer, id, cake, allcakes;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                name = props.name, catname = props.catname, description = props.description, image = props.image, price = props.price;\n                _context2.next = 3;\n                return fetch(\"http://localhost:5000/cakes/addcake?name=\".concat(name, \"&catname=\").concat(catname, \"&description=\").concat(description, \"&price=\").concat(price, \"&image=\").concat(image));\n\n              case 3:\n                response = _context2.sent;\n                _context2.next = 6;\n                return response.json();\n\n              case 6:\n                answer = _context2.sent;\n\n                if (answer.success) {\n                  id = answer.result;\n                  cake = {\n                    name: name,\n                    catname: catname,\n                    description: description,\n                    image: image,\n                    price: price,\n                    id: id\n                  };\n                  allcakes = _toConsumableArray(_this.state.allcakes).concat([cake]);\n                  toast(\"cake \\\"\".concat(name, \"\\\" added to \\\"\").concat(catname, \"\\\"\"));\n\n                  _this.setState({\n                    allcakes: allcakes\n                  });\n                }\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.updateCake =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(id, props) {\n        var response, answer, allcakes;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return fetch(\"http://localhost:5000/cakes/updatecake/\".concat(id, \"?name=\").concat(props.name, \"&catname=\").concat(props.catname, \"&description=\").concat(props.description, \"&image=\").concat(props.image, \"&price=\").concat(props.price));\n\n              case 2:\n                response = _context3.sent;\n                _context3.next = 5;\n                return response.json();\n\n              case 5:\n                answer = _context3.sent;\n\n                if (answer) {\n                  allcakes = _this.state.allcakes.map(function (cake) {\n                    if (cake.id === id) {\n                      var updatedCake = {\n                        id: cake.id,\n                        name: props.name,\n                        catname: props.catname,\n                        description: props.description,\n                        image: cake.image,\n                        price: props.price\n                      };\n                      toast(\"cake \\\"\".concat(updatedCake.name, \"\\\" updated\"));\n                      return updatedCake;\n                    } else {\n                      return cake;\n                    }\n                  });\n\n                  _this.setState({\n                    allcakes: allcakes\n                  });\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.deleteCake =\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(id) {\n        var response, answer, allcakes;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return fetch(\"http://localhost:5000/cakes/deletecake/\".concat(id));\n\n              case 2:\n                response = _context4.sent;\n                _context4.next = 5;\n                return response.json();\n\n              case 5:\n                answer = _context4.sent;\n\n                if (answer) {\n                  allcakes = _this.state.allcakes.filter(function (cake) {\n                    return cake.id !== id;\n                  });\n                  toast(\"cake deleted\");\n\n                  _this.setState({\n                    allcakes: allcakes\n                  });\n                }\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this.deleteAllCakes =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      var response, answer, allcakes;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!window.confirm(\"are you sure !?\")) {\n                _context5.next = 8;\n                break;\n              }\n\n              _context5.next = 3;\n              return fetch(\"http://localhost:5000/cakes/deleteall\");\n\n            case 3:\n              response = _context5.sent;\n              _context5.next = 6;\n              return response.json();\n\n            case 6:\n              answer = _context5.sent;\n\n              if (answer.success) {\n                allcakes = answer.result;\n\n                _this.setState({\n                  allcakes: allcakes\n                });\n              }\n\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n\n    _this.handleimage =\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(event) {\n        var files, data, res, file;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                files = event.target.files;\n                data = new FormData();\n                data.append('file', files[0]);\n                data.append('upload_preset', 'square');\n                _context6.next = 6;\n                return fetch('https://api.cloudinary.com/v1_1/dhmbvtwig/image/upload', {\n                  method: 'POST',\n                  body: data\n                });\n\n              case 6:\n                res = _context6.sent;\n                _context6.next = 9;\n                return res.json();\n\n              case 9:\n                file = _context6.sent;\n\n                _this.setState({\n                  image: file.secure_url\n                });\n\n              case 11:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    _this.onSubmit = function (event) {\n      event.preventDefault();\n      var _this$state = _this.state,\n          name = _this$state.name,\n          catname = _this$state.catname,\n          description = _this$state.description,\n          image = _this$state.image,\n          price = _this$state.price;\n\n      _this.addCake({\n        name: name,\n        catname: catname,\n        description: description,\n        image: image,\n        price: price\n      });\n\n      _this.setState({\n        name: \"\",\n        catname: \"\",\n        description: \"\",\n        image: \"\",\n        price: \"\"\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MenuController, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getAllCakes();\n    }\n  }, {\n    key: \"renderIfUser\",\n    value: function renderIfUser() {\n      var _this2 = this;\n\n      if (localStorage.getItem(\"token\") !== \"null\") {\n        return React.createElement(\"div\", {\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"myPar controlall\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, \"This is the Menu controller\")), React.createElement(\"div\", {\n          className: \"linkdivs\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"controllerNavigation\",\n          href: \"/control\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, \"Back to Control Panel\")), React.createElement(\"div\", {\n          className: \"controlup controlall\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: this.onSubmit,\n          className: \"addform\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, \"cake name\"), React.createElement(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          placeholder: \"name\",\n          onChange: function onChange(event) {\n            return _this2.setState({\n              name: event.target.value\n            });\n          },\n          value: this.state.name,\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          for: \"catname\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, \"cake category\"), React.createElement(\"select\", {\n          className: \"form-control\",\n          id: \"selectcatname\",\n          name: \"catname\",\n          onChange: function onChange(event) {\n            return _this2.setState({\n              catname: event.target.value\n            });\n          },\n          value: this.state.catname,\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, \"select category\"), React.createElement(\"option\", {\n          value: \"offer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, \"offer\"), React.createElement(\"option\", {\n          value: \"cake\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, \"cake\"), React.createElement(\"option\", {\n          value: \"cupcake\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, \"cupcake\"), React.createElement(\"option\", {\n          value: \"cookies\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, \"cookies\")), React.createElement(\"label\", {\n          for: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, \"Item description\"), React.createElement(\"textarea\", {\n          className: \"form-control\",\n          placeholder: \"description\",\n          onChange: function onChange(event) {\n            return _this2.setState({\n              description: event.target.value\n            });\n          },\n          value: this.state.description,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          for: \"image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, \"cake image\"), React.createElement(\"input\", {\n          className: \"form-control\",\n          type: \"file\",\n          name: \"image\",\n          accept: \"image/*\",\n          onChange: this.handleimage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          for: \"price\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, \"price\"), React.createElement(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"price\",\n          onChange: function onChange(event) {\n            return _this2.setState({\n              price: event.target.value\n            });\n          },\n          value: this.state.price,\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          className: \"form-btn\",\n          type: \"submit\",\n          value: \"add\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          className: \"form-btn\",\n          type: \"reset\",\n          value: \"cancel\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"button\",\n          className: \"form-btn\",\n          value: \"delete all\",\n          onClick: this.deleteAllCakes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"grid-cake-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, this.state.allcakes.map(function (cake) {\n          return React.createElement(Cakeitem, {\n            key: cake.id,\n            id: cake.id,\n            name: cake.name,\n            catname: cake.catname,\n            description: cake.description,\n            image: cake.image,\n            price: cake.price,\n            deleteCake: _this2.deleteCake,\n            updateCake: _this2.updateCake,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201\n            },\n            __self: this\n          });\n        })), React.createElement(ToastContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"h1\", {\n          className: \"notauth\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, \"Not Authorized\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (true) {\n        return this.renderIfUser();\n      }\n\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Forbidden\");\n    }\n  }]);\n\n  return MenuController;\n}(React.Component);\n\nexport { MenuController as default };","map":{"version":3,"sources":["/home/square/square/square/projects/blissfull-final-project/front/src/ControllerCMS/MenuController.js"],"names":["React","Cakeitem","ToastContainer","toast","MenuController","state","allcakes","name","catname","description","image","price","getAllCakes","fetch","response","json","answer","success","result","setState","addCake","props","id","cake","updateCake","map","updatedCake","deleteCake","filter","deleteAllCakes","window","confirm","handleimage","event","files","target","data","FormData","append","method","body","res","file","secure_url","onSubmit","preventDefault","localStorage","getItem","value","renderIfUser","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Cakeitem from './Cakeitem'\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n\nexport default class MenuController extends React.Component {\n\n  state = {\n    allcakes: [],\n    name: \"\",\n    catname: \"\",\n    description: \"\",\n    image: \"\",\n    price: \"\"\n  }\n\n  getAllCakes = async () => {\n\n    const response = await fetch(\n      `http://localhost:5000/cakes/allcakes`\n    );\n    const answer = await response.json();\n    if (answer.success) {\n      const allcakes = answer.result;\n      this.setState({ allcakes });\n      toast(\"cakes loaded\")\n    }\n\n  };\n\n  addCake = async (props) => {\n    const { name, catname, description, image, price } = props;\n    const response = await fetch(`http://localhost:5000/cakes/addcake?name=${name}&catname=${catname}&description=${description}&price=${price}&image=${image}`);\n    const answer = await response.json();\n    if (answer.success) {\n      const id = answer.result;\n      const cake = { name, catname, description, image, price, id }\n      const allcakes = [...this.state.allcakes, cake]\n      toast(`cake \"${name}\" added to \"${catname}\"`);\n      this.setState({ allcakes })\n\n    }\n  }\n\n  updateCake = async (id, props) => {\n    const response = await fetch(`http://localhost:5000/cakes/updatecake/${id}?name=${props.name}&catname=${props.catname}&description=${props.description}&image=${props.image}&price=${props.price}`)\n    const answer = await response.json();\n    if (answer) {\n      const allcakes = this.state.allcakes.map(cake => {\n        if (cake.id === id) {\n\n          const updatedCake = {\n            id: cake.id,\n            name: props.name,\n            catname: props.catname,\n            description: props.description,\n            image: cake.image,\n            price: props.price\n          }\n\n          toast(`cake \"${updatedCake.name}\" updated`);\n          return updatedCake\n        }\n        else {\n          return cake\n        }\n      });\n      this.setState({ allcakes });\n    }\n  }\n\n  deleteCake = async id => {\n    const response = await fetch(`http://localhost:5000/cakes/deletecake/${id}`);\n    const answer = await response.json();\n    if (answer) {\n      const allcakes = this.state.allcakes.filter(\n        cake => cake.id !== id\n      );\n      toast(`cake deleted`);\n      this.setState({ allcakes });\n    }\n  }\n\n\n\n  deleteAllCakes = async () => {\n    if (window.confirm(\"are you sure !?\")) {\n      const response = await fetch(`http://localhost:5000/cakes/deleteall`);\n      const answer = await response.json();\n      if (answer.success) {\n        const allcakes = answer.result;\n        this.setState({ allcakes })\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.getAllCakes();\n  }\n\n\n\n  handleimage = async (event) => {\n    const files = event.target.files;\n    const data = new FormData();\n    data.append('file', files[0]);\n    data.append('upload_preset', 'square')\n\n    const res = await fetch('https://api.cloudinary.com/v1_1/dhmbvtwig/image/upload', {\n      method: 'POST',\n      body: data\n    })\n    const file = await res.json()\n    this.setState({\n      image: file.secure_url\n    })\n\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n    const { name, catname, description, image, price } = this.state;\n    this.addCake({ name, catname, description, image, price });\n    this.setState({ name: \"\", catname: \"\", description: \"\", image: \"\", price: \"\" })\n  }\n\n renderIfUser(){\n  if (localStorage.getItem(\"token\") !== \"null\") {\n\n    return (\n      <div className=\"\">\n  \n        <div className=\"myPar controlall\">\n          <h1>This is the Menu controller</h1>\n        </div>\n        <div className=\"linkdivs\">\n          <a className=\"controllerNavigation\" href=\"/control\">Back to Control Panel</a>\n        </div>\n        <div className=\"controlup controlall\">\n          <form onSubmit={this.onSubmit} className=\"addform\">\n            <label for=\"text\">cake name</label>\n            <input className=\"form-control\"\n              type=\"text\"\n              placeholder=\"name\"\n              onChange={event => this.setState({ name: event.target.value })}\n              value={this.state.name}\n              required />\n  \n            <label for=\"catname\">cake category</label>\n            <select className=\"form-control\"\n              id=\"selectcatname\"\n              name=\"catname\"\n              onChange={event => this.setState({ catname: event.target.value })}\n              value={this.state.catname}\n              required>\n              <option value=\"\">select category</option>\n              <option value=\"offer\">offer</option>\n              <option value=\"cake\">cake</option>\n              <option value=\"cupcake\">cupcake</option>\n              <option value=\"cookies\">cookies</option>\n            </select>\n  \n            <label for=\"description\">Item description</label>\n            <textarea className=\"form-control\"\n              placeholder=\"description\"\n              onChange={event => this.setState({ description: event.target.value })}\n              value={this.state.description}\n            />\n  \n            <label for=\"image\">cake image</label>\n            <input className=\"form-control\"\n              type=\"file\"\n              name=\"image\"\n              accept=\"image/*\"\n              onChange={this.handleimage} />\n  \n            <label for=\"price\">price</label>\n            <input className=\"form-control\"\n              type=\"text\"\n              name=\"price\"\n              onChange={event => this.setState({ price: event.target.value })}\n              value={this.state.price}\n              required />\n            <input className=\"form-btn\" type=\"submit\" value=\"add\" />\n            <input className=\"form-btn\" type=\"reset\" value=\"cancel\" />\n            <input type=\"button\" className=\"form-btn\" value=\"delete all\" onClick={this.deleteAllCakes} />\n  \n          </form>\n        </div>\n            {/* <Transition\n            items={allcakes}\n            keys={cake => cake.id}\n            from={{ transform: \"translate3d(-100px,0,0)\" }}\n            enter={{ transform: \"translate3d(0,0px,0)\" }}\n            leave={{ transform: \"translate3d(-100px,0,0)\" }}\n            > */}\n  \n        <div className=\"grid-cake-container\">\n          {this.state.allcakes.map(cake =>\n            <Cakeitem\n              key={cake.id}\n              id={cake.id}\n              name={cake.name}\n              catname={cake.catname}\n              description={cake.description}\n              image={cake.image}\n              price={cake.price}\n              deleteCake={this.deleteCake}\n              updateCake={this.updateCake} />\n          )}\n        </div>\n        {/* </Transition> */}\n        <ToastContainer />\n      </div>)\n\n  }else {\n    return(<h1 className=\"notauth\">Not Authorized</h1>)\n  }\n  \n }\n  render() {\n\n    if(true){\n      return this.renderIfUser();\n    }\n    return <h1>Forbidden</h1>\n\n    \n    \n  }\n\n\n}\n\n"]},"metadata":{},"sourceType":"module"}