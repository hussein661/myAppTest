{"ast":null,"code":"import _regeneratorRuntime from \"/home/square/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/square/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/square/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/square/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/square/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/square/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/square/square/square/projects/blissfull-final-project/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/square/square/square/projects/blissfull-final-project/front/src/components/Order.js\";\nimport React from 'react';\nimport '../styles/makeanorder.css';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { Link } from 'react-router-dom';\n\nvar Order =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Order, _React$Component);\n\n  function Order() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Order);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Order)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      username: \"\",\n      number: \"\",\n      address: \"\",\n      userorder: \"\",\n      redirect: false,\n      submitted: false\n    };\n\n    _this.addOrder =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(username, number, address, userorder) {\n        var response, answer;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"http://localhost:5000/orders/addorder?username=\".concat(username, \"&number=\").concat(number, \"&address=\").concat(address, \"&userorder=\").concat(userorder));\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                answer = _context.sent;\n\n                if (answer) {\n                  _this.setState({\n                    submitted: true\n                  });\n\n                  toast(\" Thank you \".concat(username, \" Your order has been submitted\"));\n                }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2, _x3, _x4) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onSubmit = function (event) {\n      event.preventDefault();\n      var _this$state = _this.state,\n          username = _this$state.username,\n          number = _this$state.number,\n          address = _this$state.address,\n          userorder = _this$state.userorder;\n      console.log(_this.state);\n\n      _this.addOrder(username, number, address, userorder);\n\n      _this.setState({\n        username: \"\",\n        number: \"\",\n        address: \"\",\n        userorder: \"\"\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Order, [{\n    key: \"renderBeforeSubmit\",\n    value: function renderBeforeSubmit() {\n      var _this2 = this;\n\n      var userorders = this.props.state.orders;\n\n      if (userorders) {\n        var pricesArray = [];\n        userorders.map(function (price) {\n          return pricesArray.push(price.price * price.qty);\n        });\n        var sum = pricesArray.reduce(function (a, b) {\n          return a + b;\n        }, 0);\n        var userOrderString = \"\";\n        userOrderString = userorders.map(function (order) {\n          return order.name + \" x \" + order.qty + \" for \" + order.price * order.qty;\n        });\n        this.state.userorder = userOrderString;\n        return React.createElement(\"div\", {\n          className: \"bg-contact2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"container-contact2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"wrap-contact2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: \"contact2-form validate-form\",\n          onSubmit: this.onSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"contact2-form-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"Submit Your Order\"), React.createElement(\"div\", {\n          className: \"wrap-input2 validate-input\",\n          \"data-validate\": \"Name is required\",\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"Your Name\"), React.createElement(\"input\", {\n          className: \"input2\",\n          type: \"text\",\n          name: \"name\",\n          onChange: function onChange(event) {\n            return _this2.setState({\n              username: event.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"wrap-input2 validate-input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"number\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"Your Number\"), React.createElement(\"input\", {\n          className: \"input2\",\n          type: \"text\",\n          name: \"number\",\n          required: true,\n          onChange: function onChange(event) {\n            return _this2.setState({\n              number: event.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"wrap-input2 validate-input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"address\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Your Address\"), React.createElement(\"input\", {\n          className: \"input2\",\n          type: \"text\",\n          name: \"address\",\n          required: true,\n          onChange: function onChange(event) {\n            return _this2.setState({\n              address: event.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        })), React.createElement(\"table\", {\n          id: \"orderstable\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Item name\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Price\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Qty\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Total\")), userorders.map(function (order) {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, order.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, order.price + \" L.L \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, order.qty), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, order.price * order.qty + \" L.L\"));\n        }), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          colSpan: \"3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Overall Total : \"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, sum + \" L.L \"))), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"container-contact2-form-btn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"wrap-contact2-form-btn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"contact2-form-bgbtn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          className: \"contact2-form-btn\",\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"Submit\"), React.createElement(Link, {\n          to: \"/menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"contact2-form-btn\",\n          type: \"reset\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, \"Cancel\"))))))), React.createElement(ToastContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \"No Orders \"), React.createElement(ToastContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"renderAfterSubmit\",\n    value: function renderAfterSubmit() {\n      var _this3 = this;\n\n      var userorders = this.props.state.orders;\n\n      if (userorders) {\n        var pricesArray = [];\n        userorders.map(function (price) {\n          return pricesArray.push(price.price * price.qty);\n        });\n        var sum = pricesArray.reduce(function (a, b) {\n          return a + b;\n        }, 0);\n        var userOrderString = \"\";\n        userOrderString = userorders.map(function (order) {\n          return order.name + \" x \" + order.qty + \" for \" + order.price * order.qty;\n        });\n        this.state.userorder = userOrderString;\n        return React.createElement(\"div\", {\n          className: \"bg-contact2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"container-contact2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"wrap-contact2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: \"contact2-form validate-form\",\n          onSubmit: this.onSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"contact2-form-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, \"Submit Your Order\"), React.createElement(\"div\", {\n          className: \"wrap-input2 validate-input\",\n          \"data-validate\": \"Name is required\",\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, \"Your Name\"), React.createElement(\"input\", {\n          className: \"input2\",\n          type: \"text\",\n          name: \"name\",\n          onChange: function onChange(event) {\n            return _this3.setState({\n              username: event.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"wrap-input2 validate-input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"number\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, \"Your Number\"), React.createElement(\"input\", {\n          className: \"input2\",\n          type: \"text\",\n          name: \"number\",\n          required: true,\n          onChange: function onChange(event) {\n            return _this3.setState({\n              number: event.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"wrap-input2 validate-input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"address\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, \"Your Address\"), React.createElement(\"input\", {\n          className: \"input2\",\n          type: \"text\",\n          name: \"address\",\n          required: true,\n          onChange: function onChange(event) {\n            return _this3.setState({\n              address: event.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        })), React.createElement(\"table\", {\n          id: \"orderstable\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, \"Item name\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, \"Price\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, \"Qty\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, \"Total\")), userorders.map(function (order) {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          }, order.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          }, order.price + \" L.L \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          }, order.qty), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          }, order.price * order.qty + \" L.L\"));\n        }), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          colSpan: \"3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, \"Overall Total : \"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, sum + \" L.L \"))), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"container-contact2-form-btn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"wrap-contact2-form-btn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"contact2-form-bgbtn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }), React.createElement(Link, {\n          to: \"/menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"contact2-form-btn\",\n          type: \"reset\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, \"Back To Store\"))))))), React.createElement(ToastContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, \"No Orders \"), React.createElement(ToastContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.submitted === false) {\n        return this.renderBeforeSubmit();\n      } else {\n        return this.renderAfterSubmit();\n      }\n    }\n  }]);\n\n  return Order;\n}(React.Component);\n\nexport default Order;","map":{"version":3,"sources":["/home/square/square/square/projects/blissfull-final-project/front/src/components/Order.js"],"names":["React","ToastContainer","toast","Link","Order","state","username","number","address","userorder","redirect","submitted","addOrder","fetch","response","json","answer","setState","onSubmit","event","preventDefault","console","log","userorders","props","orders","pricesArray","map","price","push","qty","sum","reduce","a","b","userOrderString","order","name","target","value","renderBeforeSubmit","renderAfterSubmit","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport '../styles/makeanorder.css'\nimport { ToastContainer, toast } from \"react-toastify\";\nimport {Link} from 'react-router-dom';\n\n\n\nclass Order extends React.Component {\n\n    state= {\n        username:\"\",\n        number:\"\",\n        address:\"\",\n        userorder:\"\",\n        redirect:false,\n        submitted:false\n    }\n    \n\n  addOrder= async (username,number,address,userorder) => {\n    const response = await fetch(`http://localhost:5000/orders/addorder?username=${username}&number=${number}&address=${address}&userorder=${userorder}`);\n    const answer = await response.json();\n    if (answer) {\n        this.setState({submitted:true})\n        toast(` Thank you ${username} Your order has been submitted`);\n\n        \n        \n\n      }\n    }\n\n  onSubmit = event => {\n    event.preventDefault();\n    const { username, number,address, userorder } = this.state;\n    console.log(this.state)\n    this.addOrder(username, number,address, userorder);\n    this.setState({ username : \"\", number : \"\",address : \"\", userorder : \"\" })\n    \n  }\n\n  renderBeforeSubmit(){\n\n    const userorders = this.props.state.orders;\n        if (userorders) {\n\n            const pricesArray = []\n            userorders.map(price =>\n                pricesArray.push((price.price) * price.qty)\n            )\n            var sum = pricesArray.reduce((a, b) => a + b, 0)\n            var userOrderString = \"\"\n            userOrderString = userorders.map(order=> order.name + \" x \" +order.qty + \" for \" + order.price*order.qty )\n            this.state.userorder = userOrderString;\n            return (\n                <div className=\"bg-contact2\" >\n                    <div className=\"container-contact2\" >\n                        <div className=\"wrap-contact2\" >\n                            <form className=\"contact2-form validate-form\" onSubmit={this.onSubmit}>\n                                <span className=\"contact2-form-title\">\n                                    Submit Your Order\n                        </span>\n\n                                <div className=\"wrap-input2 validate-input\" data-validate=\"Name is required\" required>\n                                <label for=\"name\">Your Name</label>\n                                    <input className=\"input2\" type=\"text\" name=\"name\" onChange={event=>this.setState({username:event.target.value})} />\n                                </div>\n\n                                <div className=\"wrap-input2 validate-input\" >\n                                    <label for=\"number\" >Your Number</label>\n                                    <input className=\"input2\" type=\"text\" name=\"number\" required onChange={event=>this.setState({number:event.target.value})} />\n                                </div>\n                                <div className=\"wrap-input2 validate-input\" >\n                                <label for=\"address\">Your Address</label>\n                                    <input className=\"input2\" type=\"text\" name=\"address\"   required onChange={event=>this.setState({address:event.target.value})}/>\n                                </div>\n                                <table id=\"orderstable\">\n                                    <tr>\n                                        <td>Item name</td><td>Price</td><td>Qty</td><td>Total</td>\n                                    </tr>\n                                    {userorders.map(order =>\n                                        <tr>\n                                            <td>{order.name}</td><td>{order.price + \" L.L \"}</td><td>{order.qty}</td><td>{order.price * order.qty + \" L.L\"}</td>\n\n                                        </tr>\n                                    )}\n\n\n                                    <tr>\n                                        <td colSpan=\"3\">Overall Total : </td><td>{sum + \" L.L \"}</td>\n                                    </tr>\n\n                                </table>\n                                <hr />\n\n\n\n\n                                <div className=\"container-contact2-form-btn\">\n                                    <div className=\"wrap-contact2-form-btn\">\n                                        <div className=\"contact2-form-bgbtn\"></div>\n                                        <button className=\"contact2-form-btn\" type=\"submit\">\n                                            Submit\n                                </button>\n                                <Link to=\"/menu\">\n                                <button className=\"contact2-form-btn\" type=\"reset\">\n                                            Cancel\n                                </button>\n                                </Link>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        {/* {this.state.redirect && (\n                        <Redirect to={{ pathname: '/menu', state: { toast : \"thank you\" } }}/>                    \n                               )\n                               \n                            } */}\n                    </div>\n                    <ToastContainer/>\n                </div>\n\n\n            )\n        } else {\n            return (\n                <div>\n                    <h1>No Orders </h1>\n                    <ToastContainer/>\n\n                </div>\n            )\n        }\n\n    }\n\n\n    renderAfterSubmit(){\n\n        const userorders = this.props.state.orders;\n            if (userorders) {\n    \n                const pricesArray = []\n                userorders.map(price =>\n                    pricesArray.push((price.price) * price.qty)\n                )\n                var sum = pricesArray.reduce((a, b) => a + b, 0)\n                var userOrderString = \"\"\n                userOrderString = userorders.map(order=> order.name + \" x \" +order.qty + \" for \" + order.price*order.qty )\n                this.state.userorder = userOrderString;\n                return (\n                    <div className=\"bg-contact2\" >\n                        <div className=\"container-contact2\" >\n                            <div className=\"wrap-contact2\" >\n                                <form className=\"contact2-form validate-form\" onSubmit={this.onSubmit}>\n                                    <span className=\"contact2-form-title\">\n                                        Submit Your Order\n                            </span>\n    \n                                    <div className=\"wrap-input2 validate-input\" data-validate=\"Name is required\" required>\n                                    <label for=\"name\">Your Name</label>\n                                        <input className=\"input2\" type=\"text\" name=\"name\" onChange={event=>this.setState({username:event.target.value})} />\n                                    </div>\n    \n                                    <div className=\"wrap-input2 validate-input\" >\n                                        <label for=\"number\" >Your Number</label>\n                                        <input className=\"input2\" type=\"text\" name=\"number\" required onChange={event=>this.setState({number:event.target.value})} />\n                                    </div>\n                                    <div className=\"wrap-input2 validate-input\" >\n                                    <label for=\"address\">Your Address</label>\n                                        <input className=\"input2\" type=\"text\" name=\"address\"   required onChange={event=>this.setState({address:event.target.value})}/>\n                                    </div>\n                                    <table id=\"orderstable\">\n                                        <tr>\n                                            <td>Item name</td><td>Price</td><td>Qty</td><td>Total</td>\n                                        </tr>\n                                        {userorders.map(order =>\n                                            <tr>\n                                                <td>{order.name}</td><td>{order.price + \" L.L \"}</td><td>{order.qty}</td><td>{order.price * order.qty + \" L.L\"}</td>\n    \n                                            </tr>\n                                        )}\n    \n    \n                                        <tr>\n                                            <td colSpan=\"3\">Overall Total : </td><td>{sum + \" L.L \"}</td>\n                                        </tr>\n    \n                                    </table>\n                                    <hr />\n    \n    \n    \n    \n                                    <div className=\"container-contact2-form-btn\">\n                                        <div className=\"wrap-contact2-form-btn\">\n                                            <div className=\"contact2-form-bgbtn\"></div>\n\n                                    <Link to=\"/menu\">\n                                    <button className=\"contact2-form-btn\" type=\"reset\">\n                                                Back To Store\n                                    </button>\n                                    </Link>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                            {/* {this.state.redirect && (\n                            <Redirect to={{ pathname: '/menu', state: { toast : \"thank you\" } }}/>                    \n                                   )\n                                   \n                                } */}\n                        </div>\n                        <ToastContainer/>\n                    </div>\n    \n    \n                )\n            } else {\n                return (\n                    <div>\n                        <h1>No Orders </h1>\n                        <ToastContainer/>\n    \n                    </div>\n                )\n            }\n    \n        }\n      \n  \n    render() {\n    if(this.state.submitted === false){\n return this.renderBeforeSubmit()\n}else {\n    return this.renderAfterSubmit()\n}\n\n}\n}\nexport default Order;"]},"metadata":{},"sourceType":"module"}